I. HybridApplication
----------------------
This is the application class. It just sets up the application and runs the render loop.

II. HybridFrameListener
------------------------
This class is a registered OGRE frameListener. Most of the application's logic is in its frameStarted method
as of now.

III. HybridInputHandler
------------------------
This class uses OIS to recieve input. It requests a state change to shut down the application when the escape
key is pressed.

IV. HybridStateManager
-----------------------
This class manages application states like STARTUP, SHUTDOWN, RAYTRACE, RASTERISE, RAYTRACE_AND_RASTERISE.

V.RTOutputData
----------------
This class is supposed to be a separator between an interface and its implementation. It provides a way to 
send the ray traced data for display to the rasteriser.

VI. RayTraceSystem
--------------------
This is the base class for all ray trace systems. Interface!

VII. RecursiveRayTraceSystem
------------------------------
Implementation for a recursive ray tracing system.

VIII. RayTraceCamera
---------------------
Implements a camera to set up primary rays. Constructs an orthonormal basis frame.

IX. RayTraceLight
------------------
Contains the data for doing lighting and ray-light intersection.

X. RayTraceLightList
---------------------
A list of all lights in the scene to be ray traced. Except this part, the scene graph is shared.

XI. TextureCalculator
----------------------
A clss to calculate u,v values for a point in a trinagle... I may not need this one.
 
